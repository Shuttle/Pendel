import{_ as t,c as a,a3 as e,o as i}from"./chunks/framework.C4Vvvhxx.js";const c=JSON.parse('{"title":"Shuttle.Core.Streams","description":"","frontmatter":{},"headers":[],"relativePath":"shuttle-core/shuttle-core-streams.md","filePath":"shuttle-core/shuttle-core-streams.md"}'),h={name:"shuttle-core/shuttle-core-streams.md"};function l(n,s,p,r,o,k){return i(),a("div",null,s[0]||(s[0]=[e('<h1 id="shuttle-core-streams" tabindex="-1">Shuttle.Core.Streams <a class="header-anchor" href="#shuttle-core-streams" aria-label="Permalink to &quot;Shuttle.Core.Streams&quot;">â€‹</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PM&gt; Install-Package Shuttle.Core.Streams</span></span></code></pre></div><p>Provides <code>Stream</code> extensions.</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ToBytesAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Stream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the given <code>Stream</code> as a <code>byte</code> array.</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CopyAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Stream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a copy of the given <code>Stream</code>. THe copy will be at position 0 and the source <code>Stream</code> will remain at its original position.</p>',7)]))}const g=t(h,[["render",l]]);export{c as __pageData,g as default};
